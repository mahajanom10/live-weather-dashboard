# -*- coding: utf-8 -*-
"""fetch_live_weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/mahajanom10/live-weather-dashboard/blob/main/notebooks/fetch_live_weather.ipynb

# Live Weather Dashboard Project: Fetch Live Weather Data

This notebook fetches live weather data from OpenWeatherMap API for a list of cities, saves the data locally in CSV format, and pushes the changes to your GitHub repository.

## Steps:
1. Load city list
2. Fetch weather data
3. Save as CSV
4. GitHub integration for pushing changes

---
"""
# Live Weather Dashboard Project: Fetch Live Weather Data

# scripts/fetch_live_weather.py

import os
import pandas as pd
import requests
from datetime import datetime

# Load cities from GitHub raw CSV
cities_url = "https://raw.githubusercontent.com/mahajanom10/live-weather-dashboard/main/data/cities.csv"
cities_df = pd.read_csv(cities_url)
print("Cities loaded:")
print(cities_df.head())

# OpenWeatherMap API config
API_KEY = "YOUR_API_KEY_HERE"  # <-- Replace with your real key or use GitHub Secret instead
BASE_URL = "https://api.openweathermap.org/data/2.5/weather"

weather_data = []

# Fetch weather for each city
for city in cities_df['city']:
    params = {
        "q": city,
        "appid": API_KEY,
        "units": "metric"
    }
    response = requests.get(BASE_URL, params=params)
    data = response.json()

    if data.get('cod') == 200:
        weather_info = {
            "city": city,
            "temperature_c": data['main']['temp'],
            "humidity_percent": data['main']['humidity'],
            "wind_speed_m_s": data['wind']['speed'],
            "weather": data['weather'][0]['main'],
            "description": data['weather'][0]['description'],
            "datetime_utc": datetime.utcfromtimestamp(data['dt']).strftime('%Y-%m-%d %H:%M:%S')
        }
        weather_data.append(weather_info)
    else:
        print(f"Failed for {city}: {data.get('message')}")

# Convert to DataFrame
weather_df = pd.DataFrame(weather_data)
print("Weather DataFrame created:")
print(weather_df.head())

# Ensure folder exists and save CSV
os.makedirs("data", exist_ok=True)
weather_df.to_csv("data/live_weather.csv", index=False)
print("âœ… Saved updated data to data/live_weather.csv")
