# -*- coding: utf-8 -*-
"""fetch_live_weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/mahajanom10/live-weather-dashboard/blob/main/notebooks/fetch_live_weather.ipynb

# Live Weather Dashboard Project: Fetch Live Weather Data

This notebook fetches live weather data from OpenWeatherMap API for a list of cities, saves the data locally in CSV format, and pushes the changes to your GitHub repository.

## Steps:
1. Load city list
2. Fetch weather data
3. Save as CSV
4. GitHub integration for pushing changes

---
"""
# Live Weather Dashboard Project: Fetch Live Weather Data

import subprocess
import os
import pandas as pd
import requests
from datetime import datetime

# Step 1: Clone the GitHub repo
subprocess.run(
    ["git", "clone", "https://github.com/mahajanom10/live-weather-dashboard.git"],
    check=True
)

# Step 2: Load city list
cities_url = "https://raw.githubusercontent.com/mahajanom10/live-weather-dashboard/main/data/cities.csv"
cities_df = pd.read_csv(cities_url)
print("Cities loaded:")
print(cities_df)

# Step 3: Fetch weather data
API_KEY = "2247c8827c0393e8ae7eb97c42183231"  # Use your key
BASE_URL = "https://api.openweathermap.org/data/2.5/weather"

weather_data = []

for city in cities_df['city']:
    params = {
        "q": city,
        "appid": API_KEY,
        "units": "metric"
    }
    response = requests.get(BASE_URL, params=params)
    data = response.json()

    if data.get('cod') == 200:
        weather_data.append({
            "city": city,
            "temperature_c": data['main']['temp'],
            "humidity_percent": data['main']['humidity'],
            "wind_speed_m_s": data['wind']['speed'],
            "weather": data['weather'][0]['main'],
            "description": data['weather'][0]['description'],
            "datetime_utc": datetime.utcfromtimestamp(data['dt']).strftime('%Y-%m-%d %H:%M:%S')
        })
    else:
        print(f"Failed for {city}: {data.get('message')}")

# Step 4: Save data into the right folder
df = pd.DataFrame(weather_data)
print("Weather DataFrame created:")
print(df)

os.makedirs("data", exist_ok=True)
df.to_csv("data/live_weather.csv", index=False)
print("Saved updated data to data/live_weather.csv")

# Step 5: GitHub Configuration
subprocess.run(["git", "config", "--global", "user.email", "mahajanom1121@gmail.com"], check=True)
subprocess.run(["git", "config", "--global", "user.name", "mahajanom10"], check=True)

# Step 6: Move updated CSV into cloned repo
os.makedirs("live-weather-dashboard/data", exist_ok=True)
subprocess.run(["mv", "data/live_weather.csv", "live-weather-dashboard/data/live_weather.csv"], check=True)

# Step 7: Commit and push if changes
os.chdir("live-weather-dashboard")

subprocess.run(["git", "add", "data/live_weather.csv"], check=True)

# Check for changes before committing
status = subprocess.run(["git", "status", "--porcelain"], capture_output=True, text=True)
if status.stdout.strip():
    subprocess.run(["git", "commit", "-m", "Update live_weather.csv"], check=True)
    subprocess.run(["git", "push", "origin", "main"], check=True)
    print("Changes pushed to GitHub.")
else:
    print("No changes to commit.")

